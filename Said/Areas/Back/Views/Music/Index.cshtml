@using Said.Common;
@{
    ViewBag.Title = "Said管理 - 音乐管理";
    Layout = "~/Areas/Back/Views/Shared/_LayoutBack.cshtml";
}

<div class="page-header">
    <h3>音乐管理&nbsp;&nbsp;<small>&gt;&nbsp;管理每一个跳动的音符，悸动的每一个时代</small><a href="javascript:;" id="said-help-btn" title="帮助"><i class="fa fa-question-circle"></i></a></h3>
</div>
<ol class="breadcrumb">
    <li><a href="/Back">Home</a></li>
    <li>资源管理</li>
    <li class="active">音乐管理</li>
</ol>
<div id="said-help" class="said-mask-content said-watermark">
    <ul>
        <li>Said生成的缩略图不能有<span class="keywords">透明背景</span>（因为缩略图最终生成是jpg格式的）</li>
        <li>上传的图片，最后会被裁剪为<span class="keywords">1.82</span>比例的图片</li>
        <li>上传的图片不允许超过<span class="keywords">1MB</span></li>
        <li>上传的音乐文件不允许超过<span class="keywords">6MB</span></li>
        <li>上传图片的时候注意上传的分类！默认上传在<span class="keywords">其他</span>分类下</li>
    </ul>
</div>
<div class="main-context">
    <div class="source-content" ms-controller="model">
        <div class="source-head">
            <div class="toolbar-left form-inline">
                <button class="btn btn-default btn-sm">添加音乐</button>
                <div class="form-group">
                    <input type="search" class="form-control" placeholder="Search" style="height:30px;" />
                </div>
                @*<div ms-widget="upload,uploadImages,$uploadImagesConfig" class="btn btn-upload btn-default btn-sm"></div>*@
            </div>
            <div class="source-loading">
                <div class="loading-line" ms-visible="isLoading">
                    <span class="loading-dot"></span>
                    <span class="loading-dot"></span>
                    <span class="loading-dot"></span>
                    <span class="loading-dot"></span>
                    <span class="loading-dot"></span>
                </div>
            </div>
            <div class="toolbar-right">
                <span class="source-sum"><span class="selected-path">@ConfigInfo.SourceMusicPath</span>-&nbsp;{{sum}}</span>
            </div>
        </div>
        <div class="source-context">
            <div class="source-body add-song">
                <div class="panel-body" avalonctrl="song">
                    <div class="upload-file-box" style="display:none;">
                        <div class="btn  btn-upload btn-lg btn-primary">
                            <div style="z-index: 3; display: block;" class="upload-mask">
                                <span class="upload-text">上传图片</span>
                                <div role="progressbar" class="upload-progress" style="width: 0%;"></div>
                                <input type="file" class="hidden-file" style="display: block;">
                            </div>
                        </div>
                    </div>
                    <div class="add-form">
                        <div class="col-md-4">
                            <div class="music-img">
                                <div title="点击选择图片" class="addSaid-mask" style="z-index: 2; display: block;">
                                    <span class="song-mask-text">选择歌曲图片</span>
                                </div>
                                <div class="thumbnail">
                                    <img src="/Source/Said/Musics/Images864820153228222306.jpg">
                                </div>
                            </div>
                        </div>
                        <div class="music-info col-md-8 form-horizontal">
                            <div class="form-group input-group">
                                <span class="input-group-addon">歌　　曲</span>
                                <input type="text" value="" required="" placeholder="歌曲名称" name="Song.SongName" class="form-control" autocomplete="off">
                            </div>
                            <div class="form-group input-group">
                                <span class="input-group-addon">专　　辑</span>
                                <input type="text" value="" placeholder="歌曲专辑" name="Song.SongAlbum" class="form-control" autocomplete="off">
                            </div>
                            <div class="form-group input-group">
                                <span class="input-group-addon">歌　　手</span>
                                <input type="text" value="" placeholder="艺术家" name="Song.SongArtist" class="form-control" autocomplete="off">
                            </div>
                            <div class="form-group input-group">
                                <span class="input-group-addon">发行日期</span>
                                <input type="date" value="" placeholder="发行日期" name="Song.SongFileName" class="form-control" autocomplete="off">
                            </div>
                            <div class="form-group input-group">
                                <span class="input-group-addon">图　　片</span>
                                <input type="text" value="" placeholder="图片（自动生成）" name="Song.SongFileName" disabled="disabled" class="form-control" autocomplete="off">
                            </div>
                            <div class="form-group input-group">
                                <span class="input-group-addon">文　　件</span>
                                <input type="text" value="" placeholder="文件名（自动生成）" name="Song.SongFileName" disabled="disabled" class="form-control" autocomplete="off">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="source-body">
                <div ms-repeat-item="datas" class="source-item" ms-class="selected:activeIndex==$index" ms-click="activeItem(item,$index)">
                    <div class="item-img" ms-css-background-image="'url(' + item.img + ')'"></div>
                    <div class="item-info">
                        <span class="img-name">{{item.IName}}</span>
                        <a title="删除" class="fa fa-times item-delete" href="javascript:;" ms-click="deleteImage($event,item,$index)"></a>
                    </div>
                </div>
                @*<div data-id="cac2b7cb398c470296e69765bd2fdd51" class="source-item selected">
                        <div class="item-img" data-src="/Source/Sys/Images/Thumbnail028620152702234207.jpg" style="background-image:url(/Source/Sys/Images/Thumbnail028620152702234207.jpg)">
                        </div>
                        <div class="item-info">
                            <span class="img-name">196620151803225207.jpg</span>
                            <a title="删除" class="fa fa-times item-delete" data-name="196620151803225207.jpg" data-id="cac2b7cb398c470296e69765bd2fdd51" href="javascript:;"></a>
                        </div>
                    </div>*@
            </div>
            <nav class="source-footer">
                <ul class="pagination">
                    <!--ms-visible="total==0"-->
                    @*<li ms-if="pageIndex>1"><a href="javascript:;" aria-label="Previous"><span aria-hidden="true">«</span></a></li>*@
                    <li ms-if="pageIndex > 3"><a href="javascript:;" ms-click="load(1)"><span>1</span></a></li>
                    <li ms-if="pageIndex > 3"><span>...</span></li>
                    <li ms-repeat-index="pages" ms-class="active:index==pageIndex">
                        <a ms-if="index!=pageIndex" href="javascript:;" ms-click="load(index)">{{index}}</a>
                        <span ms-if="index==pageIndex">{{index}}</span>
                    </li>
                    <li ms-if="sumPage - 5 >= pageIndex"><span>...</span></li>
                    <li ms-if="sumPage - 5 >= pageIndex "><a href="javascript:;" ms-click="load(sumPage)"><span>{{sumPage}}</span></a></li>
                    @*<li ms-if="pageIndex < sumPage"><a href="javascript:;" aria-label="Next"><span aria-hidden="true">»</span></a></li>*@
                </ul>
            </nav>
        </div>
    </div>
    <div class="source-detail" ms-controller="currData">
        <ul class="source-info" ms-visible="ImageId">
            <li>{{IName}}</li>
            <li>{{Date}}</li>
            <li>{{ISize}}</li>
            <li>{{Type}}</li>
            <li>被引用{{ReferenceCount}}次</li>
            <li class="text-center"><a ms-href="Img" target="_blank" class="btn btn-default">查看大图</a></li>
        </ul>
    </div>
</div>
@section Css{
    <link href="@Url.Content("~/Content/Back/Style/imagesCenter.css")" rel="stylesheet" />
}

@section FootJs{
    <script>

        var Action = {
            getList: '@Url.Action("GetMusicList", "Music")',
            realDelete: '@Url.Action("RealDeleteMusic", "Music")',
            upload: '@Url.Action("Upload", "Music")'
        },
            Source = {
                image: '@ConfigInfo.SourceMusicImagePath',
                maxSize: '@ConfigInfo.SizeMusic',
                filters: ['mp3', 'ogg']
            };
        require.config({
            baseUrl: '/Content/Back/JavaScript',
            paths: {
                'showMsg': 'so/plug/showMsg',
                'avalonUpload': 'avalon/plug/uploadBox',
                'dialog': 'so/plug/dialog'
            },
            packages: [
            {
                name: 'so',
                location: 'so',
                main: 'so'
            },
            {
                name: 'said',
                location: 'said',
                main: 'said'
            }]
        });
        require(['jquery', 'avalon', 'so', 'showMsg', 'dialog', 'avalonUpload'], function ($, avalon, _, showMsg, dialog, upload) {
            $(function () {
                'use strict';
                var database = _.DataBase('back.Music');
                var imageUrl = {
                    get: function (imgName) {
                        return Source.image + imgName;
                    }
                },
                $dialog = dialog();
                var vmCurrData = avalon.define({
                    $id: 'currData',
                    ImageId: '',
                    IName: '',
                    Img: '',
                    Date: '',
                    ISize: '',
                    Type: '',
                    ReferenceCount: '',
                });

                var vmModel = avalon.define({
                    $id: 'model',
                    select: function (e, typeId) {
                        vmModel.typeText = typeof e === 'string' ? e : this.innerHTML;
                        avalon.vmodels.uploadImages.visible = typeId < 4 || typeId > 6 ? true : false;
                        vmModel.reload(typeId);
                    },
                    multiple: false,
                    typeId: -1,
                    typeText: '',
                    activeIndex: -1,
                    sum: 0,
                    isLoading: false,
                    datas: [],
                    caches: [],//已经翻页加载过的数据就不要再加载了
                    toggleMultiple: function () {
                        vmModel.multiple = !vmModel.multiple;
                    },
                    deleteImage: function (e, item, i) {
                        $dialog.text('您确定要永久删除图片【<span class="said-red said-bold"> ' + item.IName + ' </span>】么？').on(function () {
                            said.ajax(Action.realDelete, {
                                id: item.ImageId
                            }).done(function (result) {
                                if (result.code === 0) {
                                    showMsg('删除图片成功', showMsg.OK);
                                    vmModel.datas.splice(i, 1);
                                    //更新缓存池
                                    var index = vmModel.offset + i;
                                    if (vmModel.caches[index]) vmModel.caches.splice(index, 1);
                                } else {
                                    showMsg('服务器删除图片异常：' + result.msg, showMsg.ERROR, true);
                                }
                            }).fail(function () {
                                showMsg('网络连接异常', showMsg.ERROR, true);
                            });
                        }).show();
                        e.stopPropagation();
                    },
                    convertSize: function (size) {//byte
                        if (!size) return '未知';
                        size = size / 1024;
                        if (size > 1024)
                            return (size / 1024).toFixed(2) + 'MB';
                        return size.toFixed(2) + 'KB';
                    },
                    resetActive: function () {
                        vmModel.activeIndex = -1;
                        vmCurrData.ImageId = '';
                    },
                    activeItem: function (item, i) {
                        vmModel.activeIndex = i;
                        vmCurrData.IName = item.IName;
                        vmCurrData.Img = imageUrl.get(item.IFileName, item.Type);
                        vmCurrData.Date = _.dateToLocal(item.Date);
                        vmCurrData.ReferenceCount = item.ReferenceCount;
                        vmCurrData.ISize = vmModel.convertSize(item.ISize);
                        vmCurrData.ImageId = item.ImageId;
                    },
                    /*分页*/
                    limit: 12,//个数
                    offset: 0,//数据起点
                    pageIndex: 1,//当前页码
                    pages: [],
                    sumPage: 0,//总页码
                    $skipArray: ['limit', 'offset', 'caches'],
                    skipPage: function (pageIndex, sumPage) {
                        //console.log(pageIndex, sumPage);
                        var pages = [],
                            len = 0,
                            i = 0;
                        if (sumPage - pageIndex >= 5) {
                            if (pageIndex > 3) {
                                i = pageIndex - 2;
                                len = pageIndex + 2;
                            } else {
                                i = 1;
                                len = 5;
                            }

                        } else if (sumPage <= 5) {
                            i = 1;
                            len = sumPage;
                        } else {
                            i = sumPage - 4;
                            len = sumPage;
                        }
                        for (; i <= len; i++) {
                            pages.push(i);
                        }
                        //console.log(pages);//TODO 分页还要再调
                        this.pages = pages;
                    },
                    toTop: function () {
                        window.scrollTo(0, 0);
                    },
                    reload: function (typeId) {
                        vmModel.typeId = typeId;
                        vmModel.caches.length = 0;
                        vmModel.datas = [];
                        vmModel.load(1);
                    },
                    load: function (pageIndex) {
                        var self = vmModel,
                            pages = [];
                        //检查datas里面有没有
                        if (pageIndex) {
                            self.offset = parseInt((pageIndex - 1) * self.limit);
                            self.pageIndex = pageIndex;
                        }
                        //console.log(self.offset, self.limit);
                        vmModel.isLoading = true;
                        vmModel.toTop();
                        if (vmModel.caches[self.offset]) {//缓存池里有
                            vmModel.resetActive();
                            vmModel.datas = vmModel.caches.slice(self.offset, self.offset + self.limit);
                            self.skipPage(self.pageIndex, self.sumPage);
                            vmModel.isLoading = false;
                            return;
                        }
                        said.ajax(Action.getList, {
                            limit: self.limit,
                            offset: self.offset,
                        }).done(function (res) {
                            if (res.total < 1) {
                                vmModel.pages = [];
                                vmModel.isLoading = false;
                                return;
                            };
                            vmModel.resetActive();
                            self.sum = res.total;
                            self.sumPage = res.total % self.limit === 0 ? res.total / self.limit : parseInt(res.total / self.limit) + 1;
                            vmModel.datas = [];
                            res.datas.forEach(function (item, i) {
                                //只能先处理res.datas，再赋值到vmModels.datas，否则会触发：TypeError: vmModel.datas[i] is undefined，因为浏览器的缓存！这里早早就触发了，但其实vmModel.datas还没有被赋值
                                item.img = _.imgLoad.DEFAULTS.load;
                                _.imgLoad({
                                    src: imageUrl.get(item.IFileName, item.Type),
                                    done: function (url) {
                                        vmModel.datas[i] ? vmModel.datas[i].img = url : item.img = url;
                                    },
                                    fail: function (url) {
                                        vmModel.datas[i] ? vmModel.datas[i].img = url : item.img = url;
                                    }
                                });
                            });
                            vmModel.datas = res.datas;
                            vmModel.caches = vmModel.caches.concat(res.datas);
                            vmModel.isLoading = false;
                            self.skipPage(self.pageIndex, self.sumPage);
                        }).fail(function () {
                            vmModel.isLoading = false;
                            showMsg('加载数据异常', showMsg.ERROR, 2000);
                        });
                    },



                    //widget
                    $uploadImagesConfig: {
                        classFile: 'hidden-file',
                        //name: 'testFile',
                        filters: Source.filters,
                        url: Action.upload,
                        text: '上传图片',
                        classContainer: 'upload-mask',
                        classText: 'upload-text',
                        classProgress: 'upload-progress',
                        size: Source.maxSize,
                        done: function (vm, data) {
                            if (data.code) {
                                showMsg('服务器返回异常：' + data.msg, showMsg.ERROR, true);
                            } else {
                                showMsg('上传成功', showMsg.OK);
                                data.model.img = _.imgLoad.DEFAULTS.load;
                                _.imgLoad({
                                    src: imageUrl.get(data.model.IFileName, data.model.Type),
                                    done: function (url) {
                                        vmModel.datas[0] ? vmModel.datas[0].img = url : data.model.img = url;
                                    },
                                    fail: function (url) {
                                        vmModel.datas[0] ? vmModel.datas[0].img = url : data.model.img = url;
                                    }
                                });
                                vmModel.sum++;
                                vmModel.datas.unshift(data.model);
                                vmModel.activeItem(vmModel.datas[0], 0);
                                //更新缓存池
                                if (vmModel.caches[vmModel.offset]) vmModel.caches.splice(vmModel.offset, 0, vmModel.datas[0]);
                                //data.model
                            }
                            return true;
                        },
                        fail: function (vm, data) {
                            showMsg('上传失败：' + data.msg, showMsg.ERROR, true);
                        }
                    }
                });

                avalon.scan();
                if (database.val('typeId')) {
                }
                vmModel.load();
                //setTimeout(function () {

                //}, 300)
            });
        })
    </script>
}