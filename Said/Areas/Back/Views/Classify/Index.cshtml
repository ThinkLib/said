@using Said.Models
@{
    ViewBag.Title = "Said后台 - 分类/标签管理";
    Layout = "~/Areas/Back/Views/Shared/_LayoutBack.cshtml";
    IList<Classify> Classifs = ViewData["Classify"] as IList<Classify>;
    IList<Tag> tags = ViewData["Tags"] as IList<Tag>;
    var list = ViewData["iconFiles"] as string[];
}
@*<div class="showmsg-container"></div>
<div class="showmsg-mask"></div>
<div class="showmsg-content">
    <div class="showmsg-close"></div>
    <img class="showmsg-state" src="~/Content/Back/Images/showMsg/ok.png" />
    <img class="showmsg-state" src="~/Content/Back/Images/showMsg/error.png" />
    <img class="showmsg-state" src="~/Content/Back/Images/showMsg/warning.png" />
    <div class="showmsg-context">这是内容</div>
</div>*@


<div class="select-icons" id="selectIcons" style="display: none;">
    @{
        foreach (var item in list)
        {
        <a href="javascript:;" class="icons-btn" data-name="@item">
            <img src="~/Source/Sys/Images/Icons/@item" /></a>        
        }
    }
</div>
<div class="page-header">
    <h2>标签/分类&nbsp;&nbsp;<small>&gt;标签/分类管理</small></h2>
</div>
<ol class="breadcrumb">
    <li><a href="javascript:;">Home</a></li>
    <li class="active">标签/分类</li>
</ol>
<div class="main-context">
    <div class="row">
        <div class="col-md-6">
            <div class="bs-table">
                <div class="navbar-form navbar-left table-tool" id="classToolbar">
                    <div class="data-form">
                        <div class="form-control iconInput">
                            <input type="text" class="input-icon" placeholder="添加一个新的分类" maxlength="20" id="addClassifyInput" />
                        </div>
                        <button class="btn btn-info btn-add">添加</button>
                        <button class="btn btn-success" id="loadIcons">从图库中选择</button>
                    </div>
                    <div class="data-form" style="display: none">
                        <div class="form-control iconInput">
                            <input class="input-icon" placeholder="编辑分类" maxlength="20" id="editClassifyInput" />
                        </div>
                        <button id="classify-btn-up" class="btn btn-warning btn-edit" title="点击将会修改该分类">修改</button>
                        <button id="loadEditIcons" class="btn btn-success" title="点击将会修改该分类">从图库中选择</button>
                        <button class="btn btn-info btn-cancel">取消</button>
                    </div>
                </div>
                <table id="classifyTable" data-toolbar="#classToolbar" class="table table-hover table-striped main-table" data-striped="true" data-show-refresh="true" data-show-columns="true" data-search="true" data-pagination="true"></table>
            </div>
        </div>
        <div class="col-md-6">
            <div class="bs-table">
                <div class="navbar-form navbar-right table-tool" role="search" id="tagsToolbar">
                    <div class="data-form">
                        <div class="form-group">
                            <input type="text" class="form-control" placeholder="添加一个新的标签" maxlength="20" />
                        </div>
                        <button class="btn btn-info btn-add">添加</button>
                    </div>
                    <div class="data-form" style="display: none;">
                        <div class="form-group">
                            <input type="text" class="form-control" placeholder="编辑标签" maxlength="20" />
                        </div>
                        <button class="btn btn-warning btn-edit" title="点击将会修改该标签">修改</button>
                        <button class="btn btn-info btn-cancel">取消</button>
                    </div>
                </div>
                <table id="tagsTable" class="table table-hover table-striped main-table" data-toolbar="#tagsToolbar" data-striped="true" data-show-refresh="true" data-show-columns="true" data-search="true" data-pagination="true"></table>
            </div>
        </div>
    </div>
</div>
@section Css{
    <link href="@Url.Content("~/Content/Back/Style/classify.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Back/Plug/bootstrap-table/bootstrap-table.min.css")" rel="stylesheet" />
}
@section FootJs{
    @*<script src="@Url.Content("~/Content/Back/Plug/bootstrap-table/bootstrap-table.js")"></script>*@
    @*<script src="@Url.Content("~/Content/Back/Plug/bootstrap-table/bootstrap-table-zh-CN.js")"></script>*@
    <script src="~/Content/Back/JavaScript/so/plug/showMsg.js"></script>
    <script type="text/javascript">
        var PageDatas = {
            classify: [],
            tags: []
        },
            Action = {
                urlAddClassify: '@Url.Action("AddClassify", "Classify")',
                urlEditClassify: '@Url.Action("EditClassify", "Classify")',
                urlDelClassify: '@Url.Action("DeleteClassify", "Classify")',
                urlAddTag: '@Url.Action("AddTag", "Classify")',
                urlEditTag: '@Url.Action("EditTag", "Classify")',
                urlDelTag: '@Url.Action("DeleteTag", "Classify")',
                sourceClassify: '@Url.Content("~/Source/Sys/Images//Icons/")',
                defaultIcon: 'default.png'
            };

        @if (Classifs != null)
        {
            foreach (var item in Classifs)
            {

                Write(new HtmlString(string.Format("PageDatas.classify.push({{ CName: '{0}',CIcon: '{1}',ClassifyId: '{2}'}});", item.CName, item.CIcon, item.ClassifyId)));
                //Write(string.Format("大家好{0}", "linkFly"));
            }
        }
        @if (tags != null)
        {
            foreach (var item in tags)
            {
                Write(new HtmlString(string.Format("PageDatas.tags.push({{ TTagName: '{0}',TTagId: '{1}'}});", item.TagName, item.TagId)));
            }
        }

        require.config({
            baseUrl: '/Content/Back/JavaScript',
            paths: {
                'so': 'so/so',
                'classify': 'said/classify',
                'bsTable': ['../Plug/bootstrap-table/bootstrap-table'],
                'upload': ['so/plug/upload'],
                'popup': ['so/plug/popup'],
                'showmsg': ['so/plug/showMsg'],
                'bsTable-cn': ['../Plug/bootstrap-table/bootstrap-table-zh-CN'],
            },
            packages: [
            {
                name: 'said',
                location: 'said',
                main: 'said'
            }], shim: {
                'bsTable-cn': ['bsTable']
            }
        });
        require(['so', 'jquery', 'upload', 'classify', 'popup', 'bsTable-cn', 'showmsg'], function (so, $, Extend) {
            $(function () {
                'use strict';
                var $window = $(window),
                    $bsTables = $('.bs-table');
                (function ($bsTable) {
                    //分类逻辑 TODO 如果新上传了图片，是不是也要在图片选择框里追加上？？？
                    //添加分类要检测分类是否存在【【【【【】】】】】】
                    var $addInput = $('#addClassifyInput'),
                        $editInput = $('#editClassifyInput'),
                        isEdit = false,
                        globalData;
                    $bsTable.toolTable().on('toggle', function (e, index) {
                        isEdit = !!index;
                        if (!isEdit)
                            globalData = null;
                    }).on('add', function (e, $addInput) {//新增
                        var data = $addInput.uploadText();
                        if (!data.value || !data.value.trim()) {
                            showMsg('请输入分类名称', showMsg.WARNING);
                            return $addInput.focus();
                        }
                        //ajax添加
                        $.ajax(Action.urlAddClassify, {
                            type: 'post',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: JSON.stringify({ name: data.value, imgName: data.img })
                        }).done(function (server) {
                            if (server.code === 0) {
                                //分类添加成功
                                $addInput.uploadText('');
                                $classifyTable.bootstrapTable('append', [{
                                    CName: data.value,
                                    CIcon: data.img,
                                    ClassifyId: server.data
                                }]);
                                showMsg('添加分类成功', showMsg.OK);
                            } else {
                                showMsg('服务器返回异常' + server.msg, showMsg.ERROR, true);
                            }
                        }).fail(function () {
                            showMsg('网络连接异常', showMsg.ERROR);
                        });
                    }).on('edit', function (e, $editInput, data) {//操作=>编辑
                        $editInput.uploadText({
                            value: data.name,
                            img: data.icon
                        });
                        globalData = data;
                        //$editInput[0].dataset.index = data.index;
                        //$editInput[0].dataset.id = data.id;
                    }).on('delete', function (e, $editInput, data) {//操作=>删除
                        $.ajax(Action.urlDelClassify, {
                            type: 'post',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: JSON.stringify({ id: data.id })
                        }).done(function (result) {
                            if (result.code === 0) {
                                $classifyTable.bootstrapTable('remove', {
                                    field: 'ClassifyId',
                                    values: [data.id]
                                });
                                showMsg('删除分类成功', showMsg.OK);
                            } else {
                                showMsg('服务器返回异常：' + result.msg, showMsg.ERROR, true);
                            }
                        }).fail(function () {
                            showMsg('网络连接异常', showMsg.ERROR);
                        });
                    }).on('save', function () {//编辑=>保存
                        var data = $editInput.uploadText();
                        //console.dir(data);
                        //console.dir(globalData);
                        if (!data.value || !data.value.trim()) {
                            showMsg('请输入分类名称', showMsg.WARNING);
                            return $editInput.focus();
                        };
                        if (!globalData)
                            return showMsg('找不要编辑的分类信息，请重新尝试编辑', showMsg.WARNING);
                        if (data.value.trim() === globalData.name && data.img.trim() === globalData.icon) {//没有改动直接编辑成功
                            $bsTable.trigger('changeForm', 0);
                            return showMsg('编辑成功', showMsg.OK);
                        };
                        $.ajax(Action.urlEditClassify, {
                            type: 'post',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: JSON.stringify({ name: data.value.trim(), imgName: data.img.trim(), id: globalData.id })
                        }).done(function (result) {
                            if (result.code === 0) {
                                $classifyTable.bootstrapTable('updateRow', {
                                    index: globalData.index,
                                    row: {
                                        ClassifyId: globalData.id,
                                        CName: data.value,
                                        CIcon: data.img
                                    }
                                });
                                $bsTable.trigger('changeForm', 0);
                                showMsg('编辑分类成功', showMsg.OK);
                            } else {
                                showMsg('服务器返回异常：' + result.msg, showMsg.ERROR, true);
                            }
                        }).fail(function () {
                            showMsg('网络连接异常', showMsg.ERROR, true);
                        });
                    });

                    $addInput.uploadText({
                        defImg: Action.defaultIcon,
                        fail: function (error) {
                            showMsg('上传Icon异常：' + error.msg, showMsg.ERROR, true);
                        }
                    });
                    /*
                        TODO
                        1、为了保证加载，可以选择分类图，不能一直加载，删除数据的时候要检测分类图是否被引用
                        2、默认图的处理，Icon是允许没有的，但是有默认图
                        3、这个上传路径注意可以从站点全局路径对象中配置 TODO
                        4、删除图片要有弹窗警告提示
                    */
                    var $selectIconsBtn = $('#loadIcons,#loadEditIcons').popup({
                        title: '<i class="icon-picture"></i>从图库中选择Icon',
                        context: $('#selectIcons'),
                        width: 450
                    });
                    //刚开始是隐藏的，当popup加载完成再设定为显示，否则页面因为js加载的问题会闪动一下
                    $('#selectIcons').show().on('click', 'a', function () {
                        var name = this.dataset.name,
                            $target = isEdit ? $editInput : $addInput;
                        $target.uploadText({
                            value: name,
                            img: name
                        });
                        $selectIconsBtn.popup('hide');
                    });
                    $editInput.uploadText({
                        defImg: Action.defaultIcon,
                        fail: function (error) {
                            showMsg('上传Icon异常：' + error.msg, showMsg.ERROR, true);
                        }
                    });
                    var $classifyTable = $('#classifyTable').bootstrapTable({
                        columns: [
                            { field: 'ClassifyId', title: 'ID', visible: false, },
                            { field: 'CName', title: '名称', align: 'left', valign: 'bottom', sortable: true },
                            {
                                field: 'CIcon', title: 'Icon', align: 'left', valign: 'bottom', 'class': 'td-img', formatter: function (value) {
                                    return ['<img src="', Action.sourceClassify + value, '" alt="" class="blog-other-icon"/>'].join('');
                                }
                            },
                            {
                                field: 'ClassifyId', title: '操作', align: 'center', valign: 'bottom', formatter: function (value, row, index) {
                                    return ['<a class="btn btn-info icon-edit data-edit" href="javascript:;" data-id="', value, '"  data-index="', index, '" data-icon="', row.CIcon, '" data-name="', row.CName, '" title="编辑"></a><a class="btn btn-danger icon-trash data-delete" href="javascript:;" data-id="', value, '" title="删除"></a>'].join('');
                                }
                            }],
                        data: PageDatas.classify
                    });


                })($bsTables.eq(0));

                (function ($bsTable) {
                    //标签操作
                    var isEdit = false,
                        globalData;
                    $bsTable.toolTable()
                        .on('toggle', function (e, index) {
                            isEdit = !!index;
                            if (!isEdit)
                                globalData = null;
                        })
                        .on('add', function (e, $addInput) {//=>新增
                            var name = $addInput.val().trim();
                            if (!name) {
                                showMsg('请输入标签名称', showMsg.WARNING);
                                return $addInput.focus();
                            }
                            //ajax添加
                            $.ajax(Action.urlAddTag, {
                                type: 'post',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: JSON.stringify({ name: name })
                            }).done(function (server) {
                                if (server.code === 0) {
                                    //分类添加成功
                                    $addInput.val('');
                                    $tagTable.bootstrapTable('append', [{
                                        TTagName: name,
                                        TTagId: server.data
                                    }]);
                                    showMsg('添加标签成功', showMsg.OK);
                                } else {
                                    showMsg('服务器返回异常 - ' + server.msg, showMsg.ERROR, true);
                                }
                            }).fail(function () {
                                showMsg('网络连接异常', showMsg.ERROR);
                            });
                        }).
                        on('edit', function (e, $editInput, data) {//=>编辑
                            globalData = data;
                            $editInput.val(data.name).focus()[0].setSelectionRange(0, 100);
                        })
                        .on('delete', function (e, elem, data) {//=>删除
                            $.ajax(Action.urlDelTag, {
                                type: 'post',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: JSON.stringify({ id: data.id })
                            }).done(function (result) {
                                if (result.code === 0) {
                                    $tagTable.bootstrapTable('remove', {
                                        field: 'TTagId',
                                        values: [data.id]
                                    });
                                    showMsg('删除标签成功', showMsg.OK);
                                } else {
                                    showMsg('服务器返回异常：' + result.msg, showMsg.ERROR, true);
                                }
                            }).fail(function () {
                                showMsg('网络连接异常', showMsg.ERROR);
                            });
                        })
                        .on('save', function (e, $editInput) {//编辑=>保存
                            var name = $editInput.val().trim();
                            if (!name) {
                                showMsg('请输入标签名称', showMsg.WARNING);
                                return $editInput.focus();
                            };
                            if (!globalData)
                                return showMsg('找不要编辑的标签信息，请重新尝试编辑', showMsg.WARNING);
                            if (name === globalData.name) {//没有改动直接编辑成功
                                $bsTable.trigger('changeForm', 0);
                                return showMsg('编辑成功', showMsg.OK);
                            };
                            $.ajax(Action.urlEditTag, {
                                type: 'post',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: JSON.stringify({ name: name, id: globalData.id })
                            }).done(function (result) {
                                if (result.code === 0) {
                                    $tagTable.bootstrapTable('updateRow', {
                                        index: globalData.index,
                                        row: {
                                            TTagId: globalData.id,
                                            TTagName: name
                                        }
                                    });
                                    $bsTable.trigger('changeForm', 0);
                                    showMsg('编辑分类成功', showMsg.OK);
                                } else {
                                    showMsg('服务器返回异常：' + result.msg, showMsg.ERROR, true);
                                }
                            }).fail(function () {
                                showMsg('网络连接异常', showMsg.ERROR, true);
                            });
                        });

                    var $tagTable = $('#tagsTable').bootstrapTable({
                        columns: [
                        {
                            field: 'TTagName',
                            title: '名称',
                            align: 'left',
                            sortable: true
                        },
                        {
                            field: 'TTagId',
                            title: '操作',
                            align: 'center',
                            formatter: function (value, row, index) {
                                return ['<a class="btn btn-info icon-edit data-edit" href="javascript:;" data-id="', value, '" data-index="', index, '" data-name="', row.TTagName, '" title="编辑"></a><a class="btn btn-danger icon-trash data-delete" href="javascript:;" data-id="', value, '" title="删除"></a>'].join('');
                                //return ['<a class="btn btn-warning icon-edit data-save" href="javascript:;" data-id="', value, '" title="保存"></a><a class="btn btn-info icon-trash data-cancel" href="javascript:;" data="', value, '" title="取消"></a>'].join('');
                            }
                        }],
                        data: PageDatas.tags
                    });
                })($bsTables.eq(1));
            });

        });
    </script>
}
